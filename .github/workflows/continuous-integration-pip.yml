# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI (pip)

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  code_lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=C,E,F,W,N8 --show-source --statistics --exclude="examples/* *.npy docs/* *.pyx *.pxd"
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=9 --max-line-length=88 --statistics --exclude="examples/* *.npy docs/* *.pyx *.pxd"

  build_test:
    needs: [code_lint]
    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: [3.6, 3.7, 3.8, 3.9]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install linux system dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get install --yes libopenblas-dev libfftw3-dev

      - name: Install macos system dependencies
        if: startsWith(matrix.os, 'mac')
        run: brew install openblas fftw

      - name: Install windows dependencies
        if: startsWith(matrix.os, 'windows')
        run: |
          $Env:CONDA\Scripts\conda install -c conda-forge openblas fftw
          $Env:LIB="$Env:CONDA\Library\lib"
          $Env:INCLUDE="$Env:CONDALibrary\include;$Env:CONDA\Library\include\openblas"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest cython setuptools
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Build and install package from source
        run: python setup.py develop

      - name: Test with pytest
        run: pytest --cov=./ --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v1
